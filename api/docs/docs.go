// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/gpus": {
            "get": {
                "description": "Returns list of unique GPU IDs available in telemetry data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Telemetry"
                ],
                "summary": "List GPUs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit number of records",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GPUResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/gpus/{id}/metrics/{metric_name}": {
            "get": {
                "description": "Returns metrics data for a given GPU ID and metrics name.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Telemetry"
                ],
                "summary": "Get metrics for a GPU",
                "parameters": [
                    {
                        "type": "string",
                        "description": "GPU ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Metric Name",
                        "name": "metric_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start time (ISO8601)",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time (ISO8601)",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit number of records",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TelemetryResponse"
                        }
                    }
                }
            }
        },
        "/gpus/{id}/telemetry": {
            "get": {
                "description": "Returns telemetry data for a given GPU ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Telemetry"
                ],
                "summary": "Get telemetry for a GPU",
                "parameters": [
                    {
                        "type": "string",
                        "description": "GPU ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start time (ISO8601)",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time (ISO8601)",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit number of records",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TelemetryResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.GPU": {
            "description": "GPUs device from where telemetry collected",
            "type": "object",
            "properties": {
                "device": {
                    "type": "string"
                },
                "gpu_id": {
                    "type": "integer"
                },
                "hostname": {
                    "type": "string"
                },
                "model_name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "model.GPUResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GPU"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "model.Telemetry": {
            "description": "Telemetry data collected from GPUs",
            "type": "object",
            "properties": {
                "Hostname": {
                    "type": "string"
                },
                "container": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "device": {
                    "type": "string"
                },
                "gpu_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "labels_raw": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "metric_name": {
                    "type": "string"
                },
                "modelName": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "pod": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "model.TelemetryResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Telemetry"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Telemetry API",
	Description:      "API for querying GPU telemetry stored in TimescaleDB",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
