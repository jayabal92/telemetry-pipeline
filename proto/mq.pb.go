// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: mq.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProduceRequest_Acks int32

const (
	ProduceRequest_NONE   ProduceRequest_Acks = 0
	ProduceRequest_LEADER ProduceRequest_Acks = 1
	ProduceRequest_ALL    ProduceRequest_Acks = 2
)

// Enum value maps for ProduceRequest_Acks.
var (
	ProduceRequest_Acks_name = map[int32]string{
		0: "NONE",
		1: "LEADER",
		2: "ALL",
	}
	ProduceRequest_Acks_value = map[string]int32{
		"NONE":   0,
		"LEADER": 1,
		"ALL":    2,
	}
)

func (x ProduceRequest_Acks) Enum() *ProduceRequest_Acks {
	p := new(ProduceRequest_Acks)
	*p = x
	return p
}

func (x ProduceRequest_Acks) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceRequest_Acks) Descriptor() protoreflect.EnumDescriptor {
	return file_mq_proto_enumTypes[0].Descriptor()
}

func (ProduceRequest_Acks) Type() protoreflect.EnumType {
	return &file_mq_proto_enumTypes[0]
}

func (x ProduceRequest_Acks) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceRequest_Acks.Descriptor instead.
func (ProduceRequest_Acks) EnumDescriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{1, 0}
}

type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	TimestampMs   int64                  `protobuf:"varint,3,opt,name=timestamp_ms,json=timestampMs,proto3" json:"timestamp_ms,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_mq_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_mq_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Message) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Message) GetTimestampMs() int64 {
	if x != nil {
		return x.TimestampMs
	}
	return 0
}

func (x *Message) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type ProduceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Partition     int32                  `protobuf:"varint,2,opt,name=partition,proto3" json:"partition,omitempty"` // -1 for auto/hashed
	Messages      []*Message             `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
	Acks          ProduceRequest_Acks    `protobuf:"varint,4,opt,name=acks,proto3,enum=mq.ProduceRequest_Acks" json:"acks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProduceRequest) Reset() {
	*x = ProduceRequest{}
	mi := &file_mq_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProduceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceRequest) ProtoMessage() {}

func (x *ProduceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mq_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceRequest.ProtoReflect.Descriptor instead.
func (*ProduceRequest) Descriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{1}
}

func (x *ProduceRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *ProduceRequest) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *ProduceRequest) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ProduceRequest) GetAcks() ProduceRequest_Acks {
	if x != nil {
		return x.Acks
	}
	return ProduceRequest_NONE
}

type ProduceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Partition     int32                  `protobuf:"varint,1,opt,name=partition,proto3" json:"partition,omitempty"`
	Offsets       []int64                `protobuf:"varint,2,rep,packed,name=offsets,proto3" json:"offsets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProduceResponse) Reset() {
	*x = ProduceResponse{}
	mi := &file_mq_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProduceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceResponse) ProtoMessage() {}

func (x *ProduceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mq_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceResponse.ProtoReflect.Descriptor instead.
func (*ProduceResponse) Descriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{2}
}

func (x *ProduceResponse) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *ProduceResponse) GetOffsets() []int64 {
	if x != nil {
		return x.Offsets
	}
	return nil
}

type FetchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Partition     int32                  `protobuf:"varint,2,opt,name=partition,proto3" json:"partition,omitempty"`
	Offset        int64                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	MaxMessages   int32                  `protobuf:"varint,4,opt,name=max_messages,json=maxMessages,proto3" json:"max_messages,omitempty"`
	MaxBytes      int32                  `protobuf:"varint,5,opt,name=max_bytes,json=maxBytes,proto3" json:"max_bytes,omitempty"`
	WaitMs        int32                  `protobuf:"varint,6,opt,name=wait_ms,json=waitMs,proto3" json:"wait_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchRequest) Reset() {
	*x = FetchRequest{}
	mi := &file_mq_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchRequest) ProtoMessage() {}

func (x *FetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mq_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchRequest.ProtoReflect.Descriptor instead.
func (*FetchRequest) Descriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{3}
}

func (x *FetchRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *FetchRequest) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *FetchRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FetchRequest) GetMaxMessages() int32 {
	if x != nil {
		return x.MaxMessages
	}
	return 0
}

func (x *FetchRequest) GetMaxBytes() int32 {
	if x != nil {
		return x.MaxBytes
	}
	return 0
}

func (x *FetchRequest) GetWaitMs() int32 {
	if x != nil {
		return x.WaitMs
	}
	return 0
}

type FetchedMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Offset        int64                  `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Message       *Message               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchedMessage) Reset() {
	*x = FetchedMessage{}
	mi := &file_mq_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchedMessage) ProtoMessage() {}

func (x *FetchedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_mq_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchedMessage.ProtoReflect.Descriptor instead.
func (*FetchedMessage) Descriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{4}
}

func (x *FetchedMessage) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FetchedMessage) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type FetchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Records       []*FetchedMessage      `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	HighWatermark int64                  `protobuf:"varint,2,opt,name=high_watermark,json=highWatermark,proto3" json:"high_watermark,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchResponse) Reset() {
	*x = FetchResponse{}
	mi := &file_mq_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchResponse) ProtoMessage() {}

func (x *FetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mq_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchResponse.ProtoReflect.Descriptor instead.
func (*FetchResponse) Descriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{5}
}

func (x *FetchResponse) GetRecords() []*FetchedMessage {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *FetchResponse) GetHighWatermark() int64 {
	if x != nil {
		return x.HighWatermark
	}
	return 0
}

type TopicPartitionMeta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Partition     int32                  `protobuf:"varint,2,opt,name=partition,proto3" json:"partition,omitempty"`
	Leader        string                 `protobuf:"bytes,3,opt,name=leader,proto3" json:"leader,omitempty"` // broker id
	Isr           []string               `protobuf:"bytes,4,rep,name=isr,proto3" json:"isr,omitempty"`       // in-sync replicas
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopicPartitionMeta) Reset() {
	*x = TopicPartitionMeta{}
	mi := &file_mq_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicPartitionMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicPartitionMeta) ProtoMessage() {}

func (x *TopicPartitionMeta) ProtoReflect() protoreflect.Message {
	mi := &file_mq_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicPartitionMeta.ProtoReflect.Descriptor instead.
func (*TopicPartitionMeta) Descriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{6}
}

func (x *TopicPartitionMeta) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *TopicPartitionMeta) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *TopicPartitionMeta) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *TopicPartitionMeta) GetIsr() []string {
	if x != nil {
		return x.Isr
	}
	return nil
}

type MetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topics        []string               `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetadataRequest) Reset() {
	*x = MetadataRequest{}
	mi := &file_mq_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest) ProtoMessage() {}

func (x *MetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mq_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest.ProtoReflect.Descriptor instead.
func (*MetadataRequest) Descriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{7}
}

func (x *MetadataRequest) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

type MetadataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Partitions    []*TopicPartitionMeta  `protobuf:"bytes,1,rep,name=partitions,proto3" json:"partitions,omitempty"`
	Brokers       []string               `protobuf:"bytes,2,rep,name=brokers,proto3" json:"brokers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetadataResponse) Reset() {
	*x = MetadataResponse{}
	mi := &file_mq_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataResponse) ProtoMessage() {}

func (x *MetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mq_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataResponse.ProtoReflect.Descriptor instead.
func (*MetadataResponse) Descriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{8}
}

func (x *MetadataResponse) GetPartitions() []*TopicPartitionMeta {
	if x != nil {
		return x.Partitions
	}
	return nil
}

func (x *MetadataResponse) GetBrokers() []string {
	if x != nil {
		return x.Brokers
	}
	return nil
}

type CreateTopicRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Partitions    int32                  `protobuf:"varint,2,opt,name=partitions,proto3" json:"partitions,omitempty"`
	Rf            int32                  `protobuf:"varint,3,opt,name=rf,proto3" json:"rf,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTopicRequest) Reset() {
	*x = CreateTopicRequest{}
	mi := &file_mq_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopicRequest) ProtoMessage() {}

func (x *CreateTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mq_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopicRequest.ProtoReflect.Descriptor instead.
func (*CreateTopicRequest) Descriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{9}
}

func (x *CreateTopicRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *CreateTopicRequest) GetPartitions() int32 {
	if x != nil {
		return x.Partitions
	}
	return 0
}

func (x *CreateTopicRequest) GetRf() int32 {
	if x != nil {
		return x.Rf
	}
	return 0
}

type CreateTopicResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTopicResponse) Reset() {
	*x = CreateTopicResponse{}
	mi := &file_mq_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopicResponse) ProtoMessage() {}

func (x *CreateTopicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mq_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopicResponse.ProtoReflect.Descriptor instead.
func (*CreateTopicResponse) Descriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{10}
}

type DeleteTopicRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTopicRequest) Reset() {
	*x = DeleteTopicRequest{}
	mi := &file_mq_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTopicRequest) ProtoMessage() {}

func (x *DeleteTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mq_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTopicRequest.ProtoReflect.Descriptor instead.
func (*DeleteTopicRequest) Descriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteTopicRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type DeleteTopicResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTopicResponse) Reset() {
	*x = DeleteTopicResponse{}
	mi := &file_mq_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTopicResponse) ProtoMessage() {}

func (x *DeleteTopicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mq_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTopicResponse.ProtoReflect.Descriptor instead.
func (*DeleteTopicResponse) Descriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{12}
}

type CommitOffsetsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Topic         string                 `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Partition     int32                  `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	Offset        int64                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitOffsetsRequest) Reset() {
	*x = CommitOffsetsRequest{}
	mi := &file_mq_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOffsetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOffsetsRequest) ProtoMessage() {}

func (x *CommitOffsetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mq_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOffsetsRequest.ProtoReflect.Descriptor instead.
func (*CommitOffsetsRequest) Descriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{13}
}

func (x *CommitOffsetsRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *CommitOffsetsRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *CommitOffsetsRequest) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *CommitOffsetsRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type CommitOffsetsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitOffsetsResponse) Reset() {
	*x = CommitOffsetsResponse{}
	mi := &file_mq_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOffsetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOffsetsResponse) ProtoMessage() {}

func (x *CommitOffsetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mq_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOffsetsResponse.ProtoReflect.Descriptor instead.
func (*CommitOffsetsResponse) Descriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{14}
}

type FetchOffsetsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Topic         string                 `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchOffsetsRequest) Reset() {
	*x = FetchOffsetsRequest{}
	mi := &file_mq_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchOffsetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchOffsetsRequest) ProtoMessage() {}

func (x *FetchOffsetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mq_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchOffsetsRequest.ProtoReflect.Descriptor instead.
func (*FetchOffsetsRequest) Descriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{15}
}

func (x *FetchOffsetsRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *FetchOffsetsRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type FetchOffsetsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Offsets       []*GroupOffset         `protobuf:"bytes,1,rep,name=offsets,proto3" json:"offsets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchOffsetsResponse) Reset() {
	*x = FetchOffsetsResponse{}
	mi := &file_mq_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchOffsetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchOffsetsResponse) ProtoMessage() {}

func (x *FetchOffsetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mq_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchOffsetsResponse.ProtoReflect.Descriptor instead.
func (*FetchOffsetsResponse) Descriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{16}
}

func (x *FetchOffsetsResponse) GetOffsets() []*GroupOffset {
	if x != nil {
		return x.Offsets
	}
	return nil
}

type GroupOffset struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Partition     int32                  `protobuf:"varint,1,opt,name=partition,proto3" json:"partition,omitempty"`
	Offset        int64                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupOffset) Reset() {
	*x = GroupOffset{}
	mi := &file_mq_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupOffset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupOffset) ProtoMessage() {}

func (x *GroupOffset) ProtoReflect() protoreflect.Message {
	mi := &file_mq_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupOffset.ProtoReflect.Descriptor instead.
func (*GroupOffset) Descriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{17}
}

func (x *GroupOffset) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *GroupOffset) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ReplicateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Partition     int32                  `protobuf:"varint,2,opt,name=partition,proto3" json:"partition,omitempty"`
	BaseOffset    int64                  `protobuf:"varint,3,opt,name=base_offset,json=baseOffset,proto3" json:"base_offset,omitempty"`
	Messages      []*Message             `protobuf:"bytes,4,rep,name=messages,proto3" json:"messages,omitempty"`
	LeaderEpoch   int64                  `protobuf:"varint,5,opt,name=leader_epoch,json=leaderEpoch,proto3" json:"leader_epoch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicateRequest) Reset() {
	*x = ReplicateRequest{}
	mi := &file_mq_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicateRequest) ProtoMessage() {}

func (x *ReplicateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mq_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicateRequest.ProtoReflect.Descriptor instead.
func (*ReplicateRequest) Descriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{18}
}

func (x *ReplicateRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *ReplicateRequest) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *ReplicateRequest) GetBaseOffset() int64 {
	if x != nil {
		return x.BaseOffset
	}
	return 0
}

func (x *ReplicateRequest) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ReplicateRequest) GetLeaderEpoch() int64 {
	if x != nil {
		return x.LeaderEpoch
	}
	return 0
}

type ReplicateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LastOffset    int64                  `protobuf:"varint,1,opt,name=last_offset,json=lastOffset,proto3" json:"last_offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicateResponse) Reset() {
	*x = ReplicateResponse{}
	mi := &file_mq_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicateResponse) ProtoMessage() {}

func (x *ReplicateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mq_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicateResponse.ProtoReflect.Descriptor instead.
func (*ReplicateResponse) Descriptor() ([]byte, []int) {
	return file_mq_proto_rawDescGZIP(), []int{19}
}

func (x *ReplicateResponse) GetLastOffset() int64 {
	if x != nil {
		return x.LastOffset
	}
	return 0
}

var File_mq_proto protoreflect.FileDescriptor

const file_mq_proto_rawDesc = "" +
	"\n" +
	"\bmq.proto\x12\x02mq\"\xc4\x01\n" +
	"\aMessage\x12\x10\n" +
	"\x03key\x18\x01 \x01(\fR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\x12!\n" +
	"\ftimestamp_ms\x18\x03 \x01(\x03R\vtimestampMs\x122\n" +
	"\aheaders\x18\x04 \x03(\v2\x18.mq.Message.HeadersEntryR\aheaders\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc1\x01\n" +
	"\x0eProduceRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x1c\n" +
	"\tpartition\x18\x02 \x01(\x05R\tpartition\x12'\n" +
	"\bmessages\x18\x03 \x03(\v2\v.mq.MessageR\bmessages\x12+\n" +
	"\x04acks\x18\x04 \x01(\x0e2\x17.mq.ProduceRequest.AcksR\x04acks\"%\n" +
	"\x04Acks\x12\b\n" +
	"\x04NONE\x10\x00\x12\n" +
	"\n" +
	"\x06LEADER\x10\x01\x12\a\n" +
	"\x03ALL\x10\x02\"I\n" +
	"\x0fProduceResponse\x12\x1c\n" +
	"\tpartition\x18\x01 \x01(\x05R\tpartition\x12\x18\n" +
	"\aoffsets\x18\x02 \x03(\x03R\aoffsets\"\xb3\x01\n" +
	"\fFetchRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x1c\n" +
	"\tpartition\x18\x02 \x01(\x05R\tpartition\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x03R\x06offset\x12!\n" +
	"\fmax_messages\x18\x04 \x01(\x05R\vmaxMessages\x12\x1b\n" +
	"\tmax_bytes\x18\x05 \x01(\x05R\bmaxBytes\x12\x17\n" +
	"\await_ms\x18\x06 \x01(\x05R\x06waitMs\"O\n" +
	"\x0eFetchedMessage\x12\x16\n" +
	"\x06offset\x18\x01 \x01(\x03R\x06offset\x12%\n" +
	"\amessage\x18\x02 \x01(\v2\v.mq.MessageR\amessage\"d\n" +
	"\rFetchResponse\x12,\n" +
	"\arecords\x18\x01 \x03(\v2\x12.mq.FetchedMessageR\arecords\x12%\n" +
	"\x0ehigh_watermark\x18\x02 \x01(\x03R\rhighWatermark\"r\n" +
	"\x12TopicPartitionMeta\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x1c\n" +
	"\tpartition\x18\x02 \x01(\x05R\tpartition\x12\x16\n" +
	"\x06leader\x18\x03 \x01(\tR\x06leader\x12\x10\n" +
	"\x03isr\x18\x04 \x03(\tR\x03isr\")\n" +
	"\x0fMetadataRequest\x12\x16\n" +
	"\x06topics\x18\x01 \x03(\tR\x06topics\"d\n" +
	"\x10MetadataResponse\x126\n" +
	"\n" +
	"partitions\x18\x01 \x03(\v2\x16.mq.TopicPartitionMetaR\n" +
	"partitions\x12\x18\n" +
	"\abrokers\x18\x02 \x03(\tR\abrokers\"Z\n" +
	"\x12CreateTopicRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x1e\n" +
	"\n" +
	"partitions\x18\x02 \x01(\x05R\n" +
	"partitions\x12\x0e\n" +
	"\x02rf\x18\x03 \x01(\x05R\x02rf\"\x15\n" +
	"\x13CreateTopicResponse\"*\n" +
	"\x12DeleteTopicRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\"\x15\n" +
	"\x13DeleteTopicResponse\"}\n" +
	"\x14CommitOffsetsRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x14\n" +
	"\x05topic\x18\x02 \x01(\tR\x05topic\x12\x1c\n" +
	"\tpartition\x18\x03 \x01(\x05R\tpartition\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x03R\x06offset\"\x17\n" +
	"\x15CommitOffsetsResponse\"F\n" +
	"\x13FetchOffsetsRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x14\n" +
	"\x05topic\x18\x02 \x01(\tR\x05topic\"A\n" +
	"\x14FetchOffsetsResponse\x12)\n" +
	"\aoffsets\x18\x01 \x03(\v2\x0f.mq.GroupOffsetR\aoffsets\"C\n" +
	"\vGroupOffset\x12\x1c\n" +
	"\tpartition\x18\x01 \x01(\x05R\tpartition\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\"\xb3\x01\n" +
	"\x10ReplicateRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x1c\n" +
	"\tpartition\x18\x02 \x01(\x05R\tpartition\x12\x1f\n" +
	"\vbase_offset\x18\x03 \x01(\x03R\n" +
	"baseOffset\x12'\n" +
	"\bmessages\x18\x04 \x03(\v2\v.mq.MessageR\bmessages\x12!\n" +
	"\fleader_epoch\x18\x05 \x01(\x03R\vleaderEpoch\"4\n" +
	"\x11ReplicateResponse\x12\x1f\n" +
	"\vlast_offset\x18\x01 \x01(\x03R\n" +
	"lastOffset2\xa6\x03\n" +
	"\x02MQ\x122\n" +
	"\aProduce\x12\x12.mq.ProduceRequest\x1a\x13.mq.ProduceResponse\x12,\n" +
	"\x05Fetch\x12\x10.mq.FetchRequest\x1a\x11.mq.FetchResponse\x125\n" +
	"\bMetadata\x12\x13.mq.MetadataRequest\x1a\x14.mq.MetadataResponse\x12>\n" +
	"\vCreateTopic\x12\x16.mq.CreateTopicRequest\x1a\x17.mq.CreateTopicResponse\x12>\n" +
	"\vDeleteTopic\x12\x16.mq.DeleteTopicRequest\x1a\x17.mq.DeleteTopicResponse\x12D\n" +
	"\rCommitOffsets\x12\x18.mq.CommitOffsetsRequest\x1a\x19.mq.CommitOffsetsResponse\x12A\n" +
	"\fFetchOffsets\x12\x17.mq.FetchOffsetsRequest\x1a\x18.mq.FetchOffsetsResponse2C\n" +
	"\n" +
	"Replicator\x125\n" +
	"\x06Append\x12\x14.mq.ReplicateRequest\x1a\x15.mq.ReplicateResponseB*Z(github.com/testorg/msg-queue/proto;protob\x06proto3"

var (
	file_mq_proto_rawDescOnce sync.Once
	file_mq_proto_rawDescData []byte
)

func file_mq_proto_rawDescGZIP() []byte {
	file_mq_proto_rawDescOnce.Do(func() {
		file_mq_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mq_proto_rawDesc), len(file_mq_proto_rawDesc)))
	})
	return file_mq_proto_rawDescData
}

var file_mq_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mq_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_mq_proto_goTypes = []any{
	(ProduceRequest_Acks)(0),      // 0: mq.ProduceRequest.Acks
	(*Message)(nil),               // 1: mq.Message
	(*ProduceRequest)(nil),        // 2: mq.ProduceRequest
	(*ProduceResponse)(nil),       // 3: mq.ProduceResponse
	(*FetchRequest)(nil),          // 4: mq.FetchRequest
	(*FetchedMessage)(nil),        // 5: mq.FetchedMessage
	(*FetchResponse)(nil),         // 6: mq.FetchResponse
	(*TopicPartitionMeta)(nil),    // 7: mq.TopicPartitionMeta
	(*MetadataRequest)(nil),       // 8: mq.MetadataRequest
	(*MetadataResponse)(nil),      // 9: mq.MetadataResponse
	(*CreateTopicRequest)(nil),    // 10: mq.CreateTopicRequest
	(*CreateTopicResponse)(nil),   // 11: mq.CreateTopicResponse
	(*DeleteTopicRequest)(nil),    // 12: mq.DeleteTopicRequest
	(*DeleteTopicResponse)(nil),   // 13: mq.DeleteTopicResponse
	(*CommitOffsetsRequest)(nil),  // 14: mq.CommitOffsetsRequest
	(*CommitOffsetsResponse)(nil), // 15: mq.CommitOffsetsResponse
	(*FetchOffsetsRequest)(nil),   // 16: mq.FetchOffsetsRequest
	(*FetchOffsetsResponse)(nil),  // 17: mq.FetchOffsetsResponse
	(*GroupOffset)(nil),           // 18: mq.GroupOffset
	(*ReplicateRequest)(nil),      // 19: mq.ReplicateRequest
	(*ReplicateResponse)(nil),     // 20: mq.ReplicateResponse
	nil,                           // 21: mq.Message.HeadersEntry
}
var file_mq_proto_depIdxs = []int32{
	21, // 0: mq.Message.headers:type_name -> mq.Message.HeadersEntry
	1,  // 1: mq.ProduceRequest.messages:type_name -> mq.Message
	0,  // 2: mq.ProduceRequest.acks:type_name -> mq.ProduceRequest.Acks
	1,  // 3: mq.FetchedMessage.message:type_name -> mq.Message
	5,  // 4: mq.FetchResponse.records:type_name -> mq.FetchedMessage
	7,  // 5: mq.MetadataResponse.partitions:type_name -> mq.TopicPartitionMeta
	18, // 6: mq.FetchOffsetsResponse.offsets:type_name -> mq.GroupOffset
	1,  // 7: mq.ReplicateRequest.messages:type_name -> mq.Message
	2,  // 8: mq.MQ.Produce:input_type -> mq.ProduceRequest
	4,  // 9: mq.MQ.Fetch:input_type -> mq.FetchRequest
	8,  // 10: mq.MQ.Metadata:input_type -> mq.MetadataRequest
	10, // 11: mq.MQ.CreateTopic:input_type -> mq.CreateTopicRequest
	12, // 12: mq.MQ.DeleteTopic:input_type -> mq.DeleteTopicRequest
	14, // 13: mq.MQ.CommitOffsets:input_type -> mq.CommitOffsetsRequest
	16, // 14: mq.MQ.FetchOffsets:input_type -> mq.FetchOffsetsRequest
	19, // 15: mq.Replicator.Append:input_type -> mq.ReplicateRequest
	3,  // 16: mq.MQ.Produce:output_type -> mq.ProduceResponse
	6,  // 17: mq.MQ.Fetch:output_type -> mq.FetchResponse
	9,  // 18: mq.MQ.Metadata:output_type -> mq.MetadataResponse
	11, // 19: mq.MQ.CreateTopic:output_type -> mq.CreateTopicResponse
	13, // 20: mq.MQ.DeleteTopic:output_type -> mq.DeleteTopicResponse
	15, // 21: mq.MQ.CommitOffsets:output_type -> mq.CommitOffsetsResponse
	17, // 22: mq.MQ.FetchOffsets:output_type -> mq.FetchOffsetsResponse
	20, // 23: mq.Replicator.Append:output_type -> mq.ReplicateResponse
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_mq_proto_init() }
func file_mq_proto_init() {
	if File_mq_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mq_proto_rawDesc), len(file_mq_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_mq_proto_goTypes,
		DependencyIndexes: file_mq_proto_depIdxs,
		EnumInfos:         file_mq_proto_enumTypes,
		MessageInfos:      file_mq_proto_msgTypes,
	}.Build()
	File_mq_proto = out.File
	file_mq_proto_goTypes = nil
	file_mq_proto_depIdxs = nil
}
